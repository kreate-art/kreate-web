@use "~/modules/teiki-ui/styles/_colors.scss" as colors;

.container {
  background-color: white;
  border-radius: 10px 10px 0 0;
  display: flex;
  flex-direction: row;
  padding: 32px;
  padding-bottom: 320px;
  width: 100%;
}

.basicNote {
  margin-top: 16px;
  font-weight: 400;
  font-size: 12px;
  line-height: 15px;
  color: rgba(0, 54, 44, 0.5);
}

.basicTitle {
  width: 100%;
  margin: 0;
}

.basicButton {
  border-radius: 75px !important;
}

.basicTitleWrapper {
  display: flex;
  align-items: center;
  margin-bottom: 16px;
}

.basicEditButton {
  margin-left: auto !important;
  background-color: rgba(31, 62, 47, 0) !important;
  color: colors.$ink !important;
  display: flex !important;
  flex-direction: row;
  align-items: center;
  padding-right: 0 !important;
  font-size: 14px !important;
}

.basicCancelButton {
  border-radius: 75px !important;
  background-color: white !important;
  border: 1px solid rgba(35, 41, 52, 0.1) !important;
}

.basicSaveButton {
  border-radius: 75px !important;
  color: white !important;
  background-color: #213f30 !important;
}

.basicModal {
  border-radius: 75px !important;
}

.basicImageModal {
  border-radius: 10px 10px 0 0;
  background-color: white;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: row;
}

.basicSideImageModal {
  border-radius: 12px;
  width: 33%;
  height: 70vh;
}

.basicMainImageModal {
  width: 67%;
  height: 70vh;
  background-color: rgba(31, 62, 47, 0.05);
  display: flex;
  flex-direction: column;
}

.basicImageEditor {
  width: 100%;
  height: 70%;
  position: relative;
}

.basicSideImageList {
  width: 100%;
  height: 100%;
  padding: 30px;
  display: flex;
  flex-direction: column;
  overflow-x: hidden;
  overflow-y: auto;
}

.basicAddImage {
  height: 13vh;
  width: 100%;
  border: 3px dotted rgba(35, 41, 52, 0.1) !important;
  border-radius: 15px !important;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 auto;
  background-color: white !important;
}

.basicImageItem {
  height: 125px;
  border-radius: 15px;
  margin-bottom: 8px;
}

.basicSideImage {
  width: 100%;
  height: 13vh;
  border: 1px solid rgba(35, 41, 52, 0.1);
  border-radius: 9px;
}

.basicCloseImageButton {
  position: absolute;
  right: 5px;
  top: 5px;
  border-radius: 100% !important;
  display: flex !important;
  justify-content: center !important;
  align-items: center !important;
  height: 20px;
  width: 20px;
  background-color: rgba(0, 0, 0, 0.5) !important;
  color: white !important;
  padding: 17px !important;
  font-size: 12px !important;
}

.basicEditingImage {
  width: 100%;
  height: 100%;
}

.basicEditingImagePlaceholder {
  width: 100%;
  height: 100%;
}

.basicEditingPlaceholderImage {
  width: 100%;
  height: 100%;
}

.basicCoverImageItem {
  width: 100%;
  height: 100%;
  flex: 0 0 auto;
}

.basicCropperWrapper {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.cropContainer {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.controls {
  position: absolute;
  bottom: 20px;
  left: 50%;
  width: 50%;
  transform: translateX(-50%);
  height: 40px;
  display: flex;
  align-items: center;
}

.zoomRange {
  appearance: none;
  height: 2px;
  width: 100%;
  background: black;
}

.zoomRange::-moz-range-thumb {
  border: 1px solid white;
  background: white;
  border-radius: 50%;
  width: 12px;
  height: 12px;
  transition: box-shadow 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
}

.zoomRange::-webkit-slider-thumb {
  border: 1px solid white;
  background: white;
  border-radius: 50%;
  width: 12px;
  height: 12px;
  transition: box-shadow 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
}

.controls:hover input[type="range"]::-webkit-slider-thumb {
  box-shadow: 0px 0px 0px 8px rgba(255, 255, 255, 0.16);
  border-radius: 50%;
}

.controls:hover input[type="range"]::-moz-range-thumb {
  box-shadow: 0px 0px 0px 8px rgba(255, 255, 255, 0.16);
}

.zoomIcon {
  margin-left: 10px !important;
  margin-right: 10px !important;
  color: white !important;
}

.basicIcon {
  margin-right: 5px;
}

.basicImageItemWrapper {
  position: relative;
  cursor: pointer;
}
